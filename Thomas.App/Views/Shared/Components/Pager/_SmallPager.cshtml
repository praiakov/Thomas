@model ReflectionIT.Mvc.Paging.IPagingList

@{
    var start = this.Model.StartPageIndex;
    var stop = this.Model.StopPageIndex;
}

@if (this.Model.PageCount > 1)
{
    <ul class="pagination pagination-sm">

        @if (start > 1)
        {
            <li>
                <a href="@Url.Action(Model.Action, Model.GetRouteValueForPage(1))" aria-label="Primeira">
                    <span aria-hidden="true">1</span>
                </a>
            </li>
        }

        @if (this.Model.PageIndex > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@string.Format("{0}?page={1}", Model.Action, this.Model.PageIndex - 1)" aria-label="Anterior">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }

        @for (int i = start; i <= stop; i++)
        {
            <li class="@((Model.PageIndex == i) ? "active" : null) page-item">
                <a class="page-link" href="@string.Format("{0}?page={1}", Model.Action, i.ToString())">@i.ToString()</a>
            </li>
        }

        @if (this.Model.PageIndex < this.Model.PageCount)
        {
            <li class="page-item">
                <a class="page-link" href="@string.Format("{0}?page={1}", Model.Action, this.Model.PageIndex + 1)" aria-label="Próxima">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }

        @if (stop < this.Model.PageCount)
        {
            <li class="page-item">
                <a class="page-link" href="@string.Format("{0}?page={1}", Model.Action, Model.GetRouteValueForPage(this.Model.PageCount))" aria-label="Última">
                    <span aria-hidden="true">@this.Model.PageCount</span>
                </a>
            </li>
        }

    </ul>
}
